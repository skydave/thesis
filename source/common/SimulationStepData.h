/*---------------------------------------------------------------------

Convinience class for handling the data of a simulation step.
This class is able to read/write simulation data generated by a
fluidsimulator. The reason why the serialization is not part of the
fluidsimulator itsself is, that we dont want to have to include all the
fluidsimulator source on order to be able to load the grid data.

----------------------------------------------------------------------*/
#pragma once
#include <vector>
#include "math/Math.h"
#include "Grid.h"
#include "util/MemoryFile.h"


///
/// \brief convinience class for reading and writing simulationstep data from an into a zip file
///
class SimulationStepData
{
public:
	SimulationStepData();
	SimulationStepData( std::string filename, bool loadGridData = true, bool loadParticleData = true ); ///< constructor

	void          load( std::string filename, bool loadGridData = true, bool loadParticleData = true ); ///< load simulationstepdata from given file
	float                                                                               getDeltaTime(); ///< delta time
	math::Vec3f                                           getVelocityAt( const math::Vec3f &position ); ///< returns the trilinear interpolated value at the specified position
	void                                                                                       clear(); ///< clears all data


	Grid                                                                                          grid; ///< celldata
	std::vector<math::Vec3f>                                                                 particles; ///< particle data
private:
	void                                                    readGridDataFromMemory( MemoryFile &file ); ///< this function will read the grid data from the given memory file (which should be a grid file!)
	void                                                readParticleDataFromMemory( MemoryFile &file ); ///< this function will read the particle data from the given memory file (which should be a pcl file!)
	float                                                                                    deltaTime;
};